import {EMOJI_NAMES, MAIN_MENU_UI_CONTROLS_EVENT, CURRENCY_EVENT, CURRENCY_NAMES} from './constants.js';
import { getEmoji } from './utils.js';
class UIManager {
    constructor() {
        this.bot = null;
        this.userMainMenuUI = {
            reply_markup: {
                inline_keyboard: [
                    [{ text: `${getEmoji(EMOJI_NAMES.CREATE_LINK)} –ó–∞–º–æ–≤–∏—Ç–∏ –æ–±–º—ñ–Ω`, callback_data: MAIN_MENU_UI_CONTROLS_EVENT.CREATE_EXCHANGE_REQUEST }],
                    [{ text: `${getEmoji(EMOJI_NAMES.MY_LINKS)} –ó–≤'—è–∑–æ–∫ –∑ –ø—Ä–µ–¥—Å—Ç–∞–≤–Ω–∏–∫–æ–º`, callback_data: MAIN_MENU_UI_CONTROLS_EVENT.CHAT }],
                    [{ text: `${getEmoji(EMOJI_NAMES.MY_LINKS)} –ê–∫—Ç—É–∞–ª—å–Ω–∏–π –∫—É—Ä—Å`, callback_data: MAIN_MENU_UI_CONTROLS_EVENT.GET_CURRENCY_VALUES }],
                    [{ text: `${getEmoji(EMOJI_NAMES.SETTINGS)} –ü—Ä–æ –±–æ—Ç`, callback_data: MAIN_MENU_UI_CONTROLS_EVENT.BOT_INFO }],
                ]
            }
        }
        this.adminMainMenuUI = {
            reply_markup: {
                inline_keyboard: [
                    [{ text: `${getEmoji(EMOJI_NAMES.RESERVED)} C–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç`, callback_data: MAIN_MENU_UI_CONTROLS_EVENT.GET_CURRENCY_LIST }],
                    [{ text: `${getEmoji(EMOJI_NAMES.LIST)} –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –æ—Å—Ç–∞–Ω–Ω—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó`, callback_data: MAIN_MENU_UI_CONTROLS_EVENT.CHAT }],
                    [{ text: `${getEmoji(EMOJI_NAMES.DETAIL)} –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é`, callback_data: MAIN_MENU_UI_CONTROLS_EVENT.CHAT }],
                    [{ text: `${getEmoji(EMOJI_NAMES.NOTIFICATION)} –ó—Ä–æ–±–∏—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è`, callback_data: MAIN_MENU_UI_CONTROLS_EVENT.NOTIFICATION }],
                    [{ text: `${getEmoji(EMOJI_NAMES.SETTINGS)} –ü—Ä–æ –±–æ—Ç`, callback_data: MAIN_MENU_UI_CONTROLS_EVENT.BOT_INFO }],
                ]
            }
        }
    }

    currencylistUIButtons(currencyList) {
        const markupArray = [];
        for (const key in currencyList) {
            const el = currencyList[key];
            markupArray.push(
                [
                    { text: `${getEmoji(EMOJI_NAMES.MONEY)} ${key}: ${el.value}`, callback_data: `${CURRENCY_EVENT.SET_CURRENCY_VALUE}${CURRENCY_NAMES[key.toUpperCase()]}`},
                    { text: `${getEmoji(EMOJI_NAMES.DOWN)} –ú—ñ–Ω. —Å—É–º–∞: ${el.minExchange}`, callback_data: `${CURRENCY_EVENT.SET_CURRENCY_MIN_SUM}${CURRENCY_NAMES[key.toUpperCase()]}`},
                    { text: `${getEmoji(EMOJI_NAMES.RESERVED)} –†–µ–∑–µ—Ä–≤ ${el.reserve}`, callback_data: `${CURRENCY_EVENT.SET_CURRENCY_RESERVE}${CURRENCY_NAMES[key.toUpperCase()]}`}
                ]
            )
        };
        return {
            reply_markup: {
                inline_keyboard: markupArray
            }
        }
    }

    init(bot) {
        this.bot = bot;
    }

    userMainMenu(chatId, data) {
        this.bot.sendMessage(chatId, `–ü—Ä–∏–≤—ñ—Ç ${data.first_name || data.last_name}  \n–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:`, this.userMainMenuUI);
    }

    adminMainMenu(chatId, data) {
        this.bot.sendMessage(chatId, `–ü—Ä–∏–≤—ñ—Ç ${data.first_name || data.last_name}  \n–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:`, this.adminMainMenuUI);
    }

    botInfo(chatId) {
        this.bot.sendMessage(chatId, `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi a lectus consequat, commodo urna ut, tempor velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean quis augue elit`);
    }

    currencylistUI(chatId, currencyList) {
        this.bot.sendMessage(chatId, `–°–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç`, this.currencylistUIButtons(currencyList));
    }

    pleaseInputData(chatId) {
        this.bot.sendMessage(chatId, `–í–≤–µ–¥—ñ—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è`);
    }

    

    // setCurrencyValueUI(chatId) {
    //     this.bot.sendMessage(chatId, `–û–±–µ—Ä—ñ—Ç—å –≤–∞–ª—é—Ç—É`, this.currencylistUI);
    // }

    // setCurrencyMinSumUI(chatId) {
    //     this.bot.sendMessage(chatId, `–û–±–µ—Ä—ñ—Ç—å –≤–∞–ª—é—Ç—É`, this.currencylistUI);
    // }

    // setCurrencyReserveUI(chatId) {
    //     this.bot.sendMessage(chatId, `–û–±–µ—Ä—ñ—Ç—å –≤–∞–ª—é—Ç—É`, this.currencylistUI);
    // }

    siteLink(chatId) {
        this.bot.sendMessage(chatId, `–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å–∞–π—Ç: üëá \nhttps:VikingBitExchange.com`);
    }

    chatWithManager(chatId) {
        this.bot.sendMessage(chatId, `–û—á—ñ–∫—É–π—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–∫–∞`);
    }

    chatWithManager(chatId) {
        this.bot.sendMessage(chatId, `–û—á—ñ–∫—É–π—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–∫–∞`);
    }

    notifyMessageAwait(chatId) {
        this.bot.sendMessage(chatId, `–ó—Ä–æ–±—ñ—Ç—å –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è`);
    }
}

export default new UIManager()