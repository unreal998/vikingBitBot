import { EMOJI_NAMES, MAIN_MENU_UI_CONTROLS_EVENT } from './constants.js';
import { getEmoji } from './utils.js';
class UIManager {
    constructor() {
        this.bot = null;
        this.mainMenuUIOptions = {
            reply_markup: {
                inline_keyboard: [
                    [{ text: `${getEmoji(EMOJI_NAMES.CREATE_LINK)} –ó–∞–º–æ–≤–∏—Ç–∏ –æ–±–º—ñ–Ω`, callback_data: MAIN_MENU_UI_CONTROLS_EVENT.CREATE_EXCHANGE_REQUEST }],
                    [{ text: `${getEmoji(EMOJI_NAMES.MY_LINKS)} –ó–≤'—è–∑–æ–∫ –∑ –ø—Ä–µ–¥—Å—Ç–∞–≤–Ω–∏–∫–æ–º`, callback_data: MAIN_MENU_UI_CONTROLS_EVENT.CHAT }],
                    [{ text: `${getEmoji(EMOJI_NAMES.SETTINGS)} –ü—Ä–æ –±–æ—Ç`, callback_data: MAIN_MENU_UI_CONTROLS_EVENT.BOT_INFO }],
                ]
            }
        }
    }

    init(bot) {
        this.bot = bot;
    }

    mainMenu(chatId, data) {
        this.bot.sendMessage(chatId, `–ü—Ä–∏–≤—ñ—Ç ${data.first_name || data.last_name}  \n–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:`, this.mainMenuUIOptions);
    }

    botInfo(chatId) {
        this.bot.sendMessage(chatId, `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi a lectus consequat, commodo urna ut, tempor velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean quis augue elit`);
    }
    
    currencylist(chatId) {
        this.bot.sendMessage(chatId, `USDT: 3213123 \nBTC: 213 \nETH: 21315 \n`);
    }

    siteLink(chatId) {
        this.bot.sendMessage(chatId, `–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å–∞–π—Ç: üëá \nhttps:VikingBitExchange.com`);
    }

    chatWithManager(chatId) {
        this.bot.sendMessage(chatId, `–û—á—ñ–∫—É–π—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–∫–∞`);
    }

    chatWithManager(chatId) {
        this.bot.sendMessage(chatId, `–û—á—ñ–∫—É–π—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–∫–∞`);
    }
}

export default new UIManager()